I"?<p><strong>题目：</strong></p>

<p>给一个链表，若其中包含环，请找出该链表的环的入口结点。</p>

<p><strong>思路：</strong></p>

<p>链表中环的入口节点</p>

<ol>
  <li>先确定有环，用快慢指针，记录多少步，快指针追上慢指针，步数即为环的长度</li>
  <li>第一个指针先走环的长度，然后第一和第二个指针一起走，相遇点就是入口节点</li>
</ol>

<p><strong>代码：</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">ListNode</span> <span class="nf">inNode</span><span class="o">(</span><span class="nc">ListNode</span> <span class="n">node</span><span class="o">){</span>
        <span class="nc">ListNode</span> <span class="n">slowNode</span><span class="o">=</span><span class="kc">null</span><span class="o">;</span>
        <span class="nc">ListNode</span> <span class="n">fastNode</span><span class="o">=</span><span class="kc">null</span><span class="o">;</span>
        <span class="nc">ListNode</span> <span class="n">frontNode</span><span class="o">=</span><span class="n">node</span><span class="o">;</span>
        <span class="nc">ListNode</span> <span class="n">postNode</span><span class="o">=</span><span class="n">node</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">next</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
            <span class="n">slowNode</span><span class="o">=</span><span class="n">node</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">slowNode</span><span class="o">.</span><span class="na">next</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
            <span class="n">fastNode</span><span class="o">=</span><span class="n">slowNode</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">count</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">fastNode</span><span class="o">!=</span><span class="n">slowNode</span><span class="o">){</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fastNode</span><span class="o">.</span><span class="na">next</span><span class="o">==</span><span class="kc">null</span><span class="o">){</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                <span class="n">fastNode</span> <span class="o">=</span> <span class="n">fastNode</span><span class="o">.</span><span class="na">next</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
                <span class="n">slowNode</span><span class="o">=</span><span class="n">slowNode</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
                <span class="n">count</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">frontNode</span><span class="o">=</span><span class="n">frontNode</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">frontNode</span><span class="o">!=</span><span class="n">postNode</span><span class="o">){</span>
            <span class="n">frontNode</span><span class="o">=</span><span class="n">frontNode</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
            <span class="n">postNode</span><span class="o">=</span><span class="n">postNode</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">frontNode</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

:ET