I"m<p><strong>题目：</strong></p>

<p>​		写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p>

<p><strong>思路：</strong></p>

<ul>
  <li>题目要求不能使用加减乘除，想到使用位运算来代替</li>
  <li>
    <p>加法计算一般分三步：1.各位相加不进位 2.计算进位 3.两者相加</p>
  </li>
  <li>
    <p>比如 7+9先相加是6，进位是10，然后10+6=16</p>
  </li>
  <li>
    <p>二进制下为00000111+00001001先相加00001110，进位00000010，然后0001110+0000010还有进位，重复前两步，直至00010000+00000000=00010000=16为止</p>
  </li>
  <li>
    <p>二进制下运算的第一步相当于异或运算(解释见表)，第二步相当于&amp;运算然后左移1位，第三步是重复前两步直至没有进位，异或的结果即为两数之和</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center"> </th>
          <th style="text-align: center">加法</th>
          <th style="text-align: center">异或</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center">0和0</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">0</td>
        </tr>
        <tr>
          <td style="text-align: center">0和1</td>
          <td style="text-align: center">1</td>
          <td style="text-align: center">1</td>
        </tr>
        <tr>
          <td style="text-align: center">1和0</td>
          <td style="text-align: center">1</td>
          <td style="text-align: center">1</td>
        </tr>
        <tr>
          <td style="text-align: center">1和1</td>
          <td style="text-align: center">0</td>
          <td style="text-align: center">0</td>
        </tr>
      </tbody>
    </table>

    <p><strong>代码：</strong></p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">num1</span><span class="o">,</span><span class="kt">int</span> <span class="n">num2</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">andNum</span><span class="o">=</span><span class="n">num1</span><span class="o">&amp;</span><span class="n">num2</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">xorNum</span><span class="o">=</span><span class="n">num1</span><span class="o">^</span><span class="n">num2</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">andNum</span><span class="o">!=</span><span class="mi">0</span><span class="o">){</span>
            <span class="n">num1</span><span class="o">=</span><span class="n">andNum</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">num2</span><span class="o">=</span><span class="n">xorNum</span><span class="o">;</span>
            <span class="n">andNum</span><span class="o">=</span><span class="n">num1</span><span class="o">&amp;</span><span class="n">num2</span><span class="o">;</span>
            <span class="n">xorNum</span><span class="o">=</span><span class="n">num1</span><span class="o">^</span><span class="n">num2</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">xorNum</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET